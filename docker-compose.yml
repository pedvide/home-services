version: "3.8"
networks:
  influxdb:
      name: influxdb
  telegraf:
      name: telegraf
  traefik:
      name: traefik

services:
  influxdb:
    image: influxdb
    container_name: influxdb
    environment:
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_ADMIN_USER=influx_admin
      - INFLUXDB_ADMIN_PASSWORD=influx_admin123
    volumes:
      - /var/lib/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
    networks:
      - influxdb
    user: "${INFLUX_UID}:${INFLUX_GID}"
    restart: unless-stopped

  telegraf:
    image: telegraf
    environment:
      - HOST_HOSTNAME=${TELEGRAF_HOSTNAME}
      - HOST_MOUNT_PREFIX=/hostfs
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
    volumes:
      - /:/hostfs:ro
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - influxdb
      - telegraf
    user: "${TELEGRAF_UID}:${TELEGRAF_GID}"
    depends_on:
      - influxdb
    restart: unless-stopped

  speedtest:
    build:
      context: ./speedtest
      dockerfile: speedtest.Dockerfile
    networks:
      - telegraf
    depends_on:
      - telegraf
    restart: unless-stopped

  grafana:
    image: grafana/grafana
    environment:
      - GF_DISABLE_INITIAL_ADMIN_CREATION=true
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana123
      - GF_DATE_FORMATS_INTERVAL_DAY='DD/MM'
      - GF_DATE_FORMATS_INTERVAL_HOUR='DD/MM HH:mm'
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
    user: "995:995"
    volumes:
      - ./grafana/data/var/lib/grafana:/var/lib/grafana
      - ./home_sensor/rest_server/data/:/rest_server_data:ro
    ports:
      - "3000:3000"
    networks:
      - influxdb
      - traefik
    depends_on:
      - influxdb
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.port=3000"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
      - "traefik.http.routers.grafana.middlewares=grafana-stripprefix"
      - "traefik.http.middlewares.grafana-stripprefix.stripprefix.prefixes=/grafana"
      - "traefik.docker.network=traefik"
    restart: unless-stopped

  duckdns:
    image: ghcr.io/linuxserver/duckdns
    environment:
      - TZ=Europe/Amsterdam
      - SUBDOMAINS=pedvide
      - TOKEN=${DUCKDNS_TOKEN}
    restart: unless-stopped

  traefik:
    image: "traefik"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik
    restart: unless-stopped

  ntp:
    build:
      context: ./ntp
      dockerfile: Dockerfile
    ports:
      - 123:123/udp
    volumes:
        - ./ntp/chrony.conf:/etc/chrony/chrony.conf:ro
    tmpfs:
      - /etc/chrony:rw,mode=1750
      - /run/chrony:rw,mode=1750
      - /var/lib/chrony:rw,mode=1750
    restart: unless-stopped

